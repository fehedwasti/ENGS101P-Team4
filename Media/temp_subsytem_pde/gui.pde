/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void phtext_change1(GTextField source, GEvent event) { //_CODE_:phtext:210059:
 if (event == GEvent.ENTERED)
  {
    String phinput = phtext.getText();
    println("PH: " + phinput);
    phtext.setText("");
    phlabel.setText("PH: "+phinput);
    myPort.write("p"+phinput);
  }
} //_CODE_:phtext:210059:

public void temptext_change1(GTextField source, GEvent event) { //_CODE_:temptext:966571:
  if (event == GEvent.ENTERED)
  {
    String tempinput = temptext.getText();
    println("Temp: " + tempinput);
    temptext.setText("");
    templabel.setText("Temp: "+tempinput);
    myPort.write("t"+tempinput);
  }
} //_CODE_:temptext:966571:

public void rmptext_change1(GTextField source, GEvent event) { //_CODE_:rpmtext:779953:
  if (event == GEvent.ENTERED)
  {
    String rpminput = rpmtext.getText();
    println("Rpm: " + rpminput);
    rpmtext.setText("");
    rpmlabel.setText("RPM: "+rpminput);
    myPort.write("r"+rpminput);
  }
  
  
} //_CODE_:rpmtext:779953:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Yoyoyo");
  label1 = new GLabel(this, 90, 10, 300, 30);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("CONTROL SYSTEM");
  label1.setOpaque(false);
  phtext = new GTextField(this, 30, 90, 110, 30, G4P.SCROLLBARS_NONE);
  phtext.setOpaque(true);
  phtext.addEventHandler(this, "phtext_change1");
  temptext = new GTextField(this, 190, 90, 110, 30, G4P.SCROLLBARS_NONE);
  temptext.setOpaque(true);
  temptext.addEventHandler(this, "temptext_change1");
  rpmtext = new GTextField(this, 340, 90, 110, 30, G4P.SCROLLBARS_NONE);
  rpmtext.setOpaque(true);
  rpmtext.addEventHandler(this, "rmptext_change1");
  rpmlabel = new GLabel(this, 340, 60, 110, 20);
  rpmlabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  rpmlabel.setText("RPM");
  rpmlabel.setOpaque(false);
  phlabel = new GLabel(this, 30, 60, 110, 20);
  phlabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  phlabel.setText("PH");
  phlabel.setOpaque(false);
  templabel = new GLabel(this, 190, 60, 110, 20);
  templabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  templabel.setText("temp");
  templabel.setOpaque(false);
    
}

// Variable declarations 
// autogenerated do not edit
GLabel label1; 
GTextField phtext; 
GTextField temptext; 
GTextField rpmtext; 
GLabel rpmlabel; 
GLabel phlabel; 
GLabel templabel; 